version: "3.9"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.serve
    image: fosm-mlops-api:latest
    environment:
      - FOSM_MODEL_DIR=/models/latest
    volumes:
      - ./models:/models
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.8.1
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command: >
      mlflow server \
        --backend-store-uri postgresql+psycopg2://mlflow:mlflow@postgres:5432/mlflow \
        --default-artifact-root s3://mlflow-artifacts \
        --host 0.0.0.0 \
        --port 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - minio

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=mlflow
      - POSTGRES_PASSWORD=mlflow
      - POSTGRES_DB=mlflow
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  tf-serving:
    image: tensorflow/serving
    environment:
      - MODEL_BASE_PATH=/models
      - MODEL_NAME=fosm
    volumes:
      - ./models/tf_export:/models/fosm
    ports:
      - "8501:8501"
      - "8500:8500"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana

volumes:
  pgdata:
  minio:
  grafana:
